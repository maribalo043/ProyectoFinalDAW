package com.mario.proyect.jugador;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.mario.proyect.equipo.EquipoDao;
import com.mario.proyect.utilidades.Repeticiones;

@Controller
public class JugadorController {

    @Autowired
    JugadorDAO jugadorDao;
    @Autowired
    EquipoDao equipoDao;

    @GetMapping(value = "/jugadores")
	public ModelAndView getJugadores(){

        ModelAndView model = new ModelAndView();

        model.addObject("jugadores", jugadorDao.findAll());
        model.setViewName("jugadores");

        return model;
    }

    @GetMapping("/jugador/{dni}")
	public ModelAndView getPlan(@PathVariable String dni) {
		Jugador jugador = jugadorDao.findById(dni).get();
		ModelAndView model = new ModelAndView();
		model.setViewName("Jugador");
		model.addObject("jugador",jugador);
		return model;
	}

    @GetMapping("/jugador/del/{dni}")
    public ModelAndView deleteJugador(@PathVariable String dni){

        ModelAndView model = new ModelAndView();
        Optional<Jugador> jugador = jugadorDao.findById(dni);
        if(jugador.isPresent()){
            jugadorDao.deleteById(dni);
        }
        model.setViewName("redirect:/jugadores");
        
        return model;
    }
    @GetMapping("/jugador/add")
    public ModelAndView addJugador(){

        ModelAndView model = new ModelAndView();
        model.addObject("jugadorNuevo", new Jugador());
        model.addObject("equipos", equipoDao.findAll());
        model.addObject("equipoItem",equipoDao.findAll());
        model.setViewName("jugadoresForm");

        return model;
    }
    /*
     * No Funciona
     */
    @SuppressWarnings("null")
    @PostMapping("/jugador/save")
    public ModelAndView saveJugador(@ModelAttribute Jugador jugadorNuevo){
    ModelAndView model = new ModelAndView();
        
        if(Repeticiones.buscarRepeticiones(jugadorNuevo, jugadorDao.findAll())){
            if(jugadorDao.findById(jugadorNuevo.getDni()).get() == jugadorNuevo){
                jugadorDao.deleteById(jugadorNuevo.getDni());
                jugadorDao.save(jugadorNuevo);
                System.out.println("Todo Ok");
            }else{
                jugadorDao.save(jugadorNuevo);
            }
        }
        model.setViewName("redirect:/jugadores");
    
        return model;
    }


    @GetMapping("/jugador/edit/{dni}")
    public ModelAndView editJugador(@PathVariable String dni){
        ModelAndView model = new ModelAndView();
        Optional <Jugador> jugOpt=jugadorDao.findById(dni);
        if(jugOpt.isPresent()) {
			model.addObject("jugadorNuevo",jugOpt.get());
            model.addObject("equipos",equipoDao.findAll());
			model.setViewName("jugadoresForm");
		}else model.setViewName("redirect:/jugadores");
		return model;
    } 
}