package com.mario.proyect.jugador;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

@RestController
public class JugadorController {

    @Autowired
    JugadorDAO jugadorDao;

    @GetMapping(value = "/jugadores", produces =  "application/json")
	public ModelAndView getJugadores() throws Exception{

        ModelAndView model = new ModelAndView();

        model.addObject("jugadores", jugadorDao.findAll());
        model.setViewName("jugadores");
        
        return model;
    }
    
    @GetMapping(value = "/jugadores2", produces = "application/json")
    @ResponseBody
    public ResponseEntity<List<Jugador>> getJugadores2() {
        List<Jugador> jugadores = (List<Jugador>) jugadorDao.findAll();
        return new ResponseEntity<List<Jugador>>(jugadores, HttpStatus.OK);
    }

    @GetMapping("/jugador/{id}")
    public ModelAndView getJugador(@PathVariable long id){
        return null;
    }
    @GetMapping("/jugador/del/{id}")
    public ModelAndView deleteJugador(){
        return null;
    }
    @GetMapping("/jugador/add")
    public ModelAndView addJugador(){
        return null;
    }
    @PostMapping("/jugador/save")
    public ModelAndView saveJugador(){
        return null;
    }
    @GetMapping("/jugador/edit/{id}")
    public ModelAndView editJugador(@PathVariable long id){
        return null;
    } 
}/*
@RestController
@RequestMapping("/api")
public class JugadorController2 {

    private final JugadorDAO jugadorDao;

    // Constructor para inyectar la dependencia del repositorio (JugadorDao)
    public JugadorController(JugadorDAO jugadorDao) {
        this.jugadorDao = jugadorDao;
    }

    @GetMapping(value = "/jugadores", produces = "application/json")
    public ResponseEntity<List<Jugador>> getJugadores() {
        try {
            List<Jugador> jugadores = (List<Jugador>) jugadorDao.findAll();
          
            // Retorna la lista de jugadores con un estado HTTP 200 (OK)
            return new ResponseEntity<>(jugadores, HttpStatus.OK);
        } catch (Exception e) {
            // Manejo de excepciones: Retorna un estado HTTP 500 (Internal Server Error)
            return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR); 
        }
    }
}

*/